[
    {
        "type": "DOCKER-FROM",
        "children": [
            {
                "type": "DOCKER-IMAGE-NAME",
                "value": "node",
                "children": []
            },
            {
                "type": "DOCKER-IMAGE-TAG",
                "value": "10-alpine",
                "children": []
            }
        ]
    },
    {
        "type": "DOCKER-RUN",
        "children": [
            {
                "type": "MAYBE-BASH",
                "value": "apk add --no-cache 'su-exec>=0.2'",
                "children": []
            }
        ]
    },
    {
        "type": "DOCKER-RUN",
        "children": [
            {
                "type": "MAYBE-BASH",
                "value": "apk add --no-cache \t\tbash",
                "children": []
            }
        ]
    },
    {
        "type": "DOCKER-ENV",
        "children": [
            {
                "type": "DOCKER-NAME",
                "value": "NODE_ENV",
                "children": []
            },
            {
                "type": "DOCKER-LITERAL",
                "value": "production",
                "children": []
            }
        ]
    },
    {
        "type": "DOCKER-ENV",
        "children": [
            {
                "type": "DOCKER-NAME",
                "value": "GHOST_CLI_VERSION",
                "children": []
            },
            {
                "type": "DOCKER-LITERAL",
                "value": "1.11.0",
                "children": []
            }
        ]
    },
    {
        "type": "DOCKER-RUN",
        "children": [
            {
                "type": "MAYBE-BASH",
                "value": "set -eux; \tnpm install -g \"ghost-cli@$GHOST_CLI_VERSION\"; \tnpm cache clean --force",
                "children": []
            }
        ]
    },
    {
        "type": "DOCKER-ENV",
        "children": [
            {
                "type": "DOCKER-NAME",
                "value": "GHOST_INSTALL",
                "children": []
            },
            {
                "type": "DOCKER-LITERAL",
                "value": "/var/lib/ghost",
                "children": []
            }
        ]
    },
    {
        "type": "DOCKER-ENV",
        "children": [
            {
                "type": "DOCKER-NAME",
                "value": "GHOST_CONTENT",
                "children": []
            },
            {
                "type": "DOCKER-LITERAL",
                "value": "/var/lib/ghost/content",
                "children": []
            }
        ]
    },
    {
        "type": "DOCKER-ENV",
        "children": [
            {
                "type": "DOCKER-NAME",
                "value": "GHOST_VERSION",
                "children": []
            },
            {
                "type": "DOCKER-LITERAL",
                "value": "2.25.1",
                "children": []
            }
        ]
    },
    {
        "type": "DOCKER-RUN",
        "children": [
            {
                "type": "MAYBE-BASH",
                "value": "set -eux; \tmkdir -p \"$GHOST_INSTALL\"; \tchown node:node \"$GHOST_INSTALL\"; \t\tsu-exec node ghost install \"$GHOST_VERSION\" --db sqlite3 --no-prompt --no-stack --no-setup --dir \"$GHOST_INSTALL\"; \t\tcd \"$GHOST_INSTALL\"; \tsu-exec node ghost config --ip 0.0.0.0 --port 2368 --no-prompt --db sqlite3 --url http://localhost:2368 --dbpath \"$GHOST_CONTENT/data/ghost.db\"; \tsu-exec node ghost config paths.contentPath \"$GHOST_CONTENT\"; \t\tsu-exec node ln -s config.production.json \"$GHOST_INSTALL/config.development.json\"; \treadlink -f \"$GHOST_INSTALL/config.development.json\"; \t\tmv \"$GHOST_CONTENT\" \"$GHOST_INSTALL/content.orig\"; \tmkdir -p \"$GHOST_CONTENT\"; \tchown node:node \"$GHOST_CONTENT\"; \t\tcd \"$GHOST_INSTALL/current\"; \tsqlite3Version=\"$(npm view . optionalDependencies.sqlite3)\"; \tif ! su-exec node yarn add \"sqlite3@$sqlite3Version\" --force; then \t\tapk add --no-cache --virtual .build-deps python make gcc g++ libc-dev; \t\t\t\tsu-exec node yarn add \"sqlite3@$sqlite3Version\" --force --build-from-source; \t\t\t\tapk del --no-network .build-deps; \tfi; \t\tsu-exec node yarn cache clean; \tsu-exec node npm cache clean --force; \tnpm cache clean --force; \trm -rv /tmp/yarn* /tmp/v8*",
                "children": []
            }
        ]
    },
    {
        "type": "DOCKER-WORKDIR",
        "children": [
            {
                "type": "DOCKER-PATH",
                "value": "$GHOST_INSTALL",
                "children": []
            }
        ]
    },
    {
        "type": "DOCKER-VOLUME",
        "children": [
            {
                "type": "DOCKER-PATH",
                "value": "$GHOST_CONTENT",
                "children": []
            }
        ]
    },
    {
        "type": "DOCKER-COPY",
        "children": [
            {
                "type": "DOCKER-COPY-TARGET",
                "children": [
                    {
                        "type": "DOCKER-PATH",
                        "value": "/usr/local/bin",
                        "children": []
                    }
                ]
            },
            {
                "type": "DOCKER-COPY-SOURCE",
                "children": [
                    {
                        "type": "DOCKER-PATH",
                        "value": "docker-entrypoint.sh",
                        "children": []
                    }
                ]
            }
        ]
    },
    {
        "type": "DOCKER-ENTRYPOINT",
        "children": [
            {
                "type": "DOCKER-ENTRYPOINT-EXECUTABLE",
                "value": "docker-entrypoint.sh",
                "children": []
            }
        ]
    },
    {
        "type": "DOCKER-EXPOSE",
        "children": [
            {
                "type": "DOCKER-PORT",
                "value": "2368",
                "children": []
            }
        ]
    },
    {
        "type": "DOCKER-CMD",
        "children": [
            {
                "type": "DOCKER-CMD-ARG",
                "value": "node",
                "children": []
            },
            {
                "type": "DOCKER-CMD-ARG",
                "value": "current/index.js",
                "children": []
            }
        ]
    }
]