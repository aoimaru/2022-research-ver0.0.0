[
    {
        "type": "DOCKER-FROM",
        "children": [
            {
                "type": "DOCKER-IMAGE-NAME",
                "value": "debian",
                "children": []
            },
            {
                "type": "DOCKER-IMAGE-TAG",
                "value": "stretch",
                "children": []
            }
        ]
    },
    {
        "type": "DOCKER-RUN",
        "children": [
            {
                "type": "MAYBE-BASH",
                "value": "set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t; \trm -rf /var/lib/apt/lists/*",
                "children": []
            }
        ]
    },
    {
        "type": "DOCKER-ENV",
        "children": [
            {
                "type": "DOCKER-NAME",
                "value": "JULIA_PATH",
                "children": []
            },
            {
                "type": "DOCKER-LITERAL",
                "value": "/usr/local/julia",
                "children": []
            }
        ]
    },
    {
        "type": "DOCKER-ENV",
        "children": [
            {
                "type": "DOCKER-NAME",
                "value": "PATH",
                "children": []
            },
            {
                "type": "DOCKER-LITERAL",
                "value": "$JULIA_PATH/bin:$PATH",
                "children": []
            }
        ]
    },
    {
        "type": "DOCKER-ENV",
        "children": [
            {
                "type": "DOCKER-NAME",
                "value": "JULIA_GPG",
                "children": []
            },
            {
                "type": "DOCKER-LITERAL",
                "value": "3673DF529D9049477F76B37566E3C7DC03D6E495",
                "children": []
            }
        ]
    },
    {
        "type": "DOCKER-ENV",
        "children": [
            {
                "type": "DOCKER-NAME",
                "value": "JULIA_VERSION",
                "children": []
            },
            {
                "type": "DOCKER-LITERAL",
                "value": "1.0.4",
                "children": []
            }
        ]
    },
    {
        "type": "DOCKER-RUN",
        "children": [
            {
                "type": "MAYBE-BASH",
                "value": "set -eux; \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) tarArch='x86_64'; dirArch='x64'; sha256='bb9e33d95f47e703d9199f0358c038c61259e2ff9f3fd515c919729ace89443c' ;; \t\tarmhf) tarArch='armv7l'; dirArch='armv7l'; sha256='2e742f4ddf5ac21779b6943ef210d73dc02f1c6de23836b352336a3dcbb18ae6' ;; \t\tarm64) tarArch='aarch64'; dirArch='aarch64'; sha256='7614d4239702c497330c043f37d99600b41e87caa8b92742c7104915eb54648a' ;; \t\ti386) tarArch='i686'; dirArch='x86'; sha256='89b71a3558aa4f515becfd21d19651035d909f5f2e3177ccaec77aee01f962b7' ;; \t\t*) echo >&2 \"error: current architecture ($dpkgArch) does not have a corresponding Julia binary release\"; exit 1 ;; \tesac; \t\tfolder=\"$(echo \"$JULIA_VERSION\" | cut -d. -f1-2)\"; \tcurl -fL -o julia.tar.gz.asc \"https://julialang-s3.julialang.org/bin/linux/${dirArch}/${folder}/julia-${JULIA_VERSION}-linux-${tarArch}.tar.gz.asc\"; \tcurl -fL -o julia.tar.gz     \"https://julialang-s3.julialang.org/bin/linux/${dirArch}/${folder}/julia-${JULIA_VERSION}-linux-${tarArch}.tar.gz\"; \t\techo \"${sha256} *julia.tar.gz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$JULIA_GPG\"; \tgpg --batch --verify julia.tar.gz.asc julia.tar.gz; \tcommand -v gpgconf > /dev/null && gpgconf --kill all; \trm -rf \"$GNUPGHOME\" julia.tar.gz.asc; \t\tmkdir \"$JULIA_PATH\"; \ttar -xzf julia.tar.gz -C \"$JULIA_PATH\" --strip-components 1; \trm julia.tar.gz; \t\tapt-mark auto '.*' > /dev/null; \t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark; \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\tjulia --version",
                "children": []
            }
        ]
    },
    {
        "type": "DOCKER-CMD",
        "children": [
            {
                "type": "DOCKER-CMD-ARG",
                "value": "julia",
                "children": []
            }
        ]
    }
]