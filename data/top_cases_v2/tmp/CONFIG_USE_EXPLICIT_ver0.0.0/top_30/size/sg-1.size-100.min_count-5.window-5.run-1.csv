result,description
0.7545114279758257,"echo ""deb http://ppa.launchpad.net/ansible/ansible/ubuntu xenial main"" | tee /etc/apt/sources.list.d/ansible.list           &&     echo ""deb-src http://ppa.launchpad.net/ansible/ansible/ubuntu xenial main"" | tee -a /etc/apt/sources.list.d/ansible.list    &&     apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 7BB9C367    &&     DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends         ansible         fonts-lato         javascript-common         libjs-jquery         libruby         rake         ruby         ruby-minitest         ruby-test-unit         rubygems-integration         unzip         zip &&     rm -rf /var/lib/apt/lists/*  /etc/apt/sources.list.d/ansible.list &&     gem install bundler &&     gem cleanup all"
0.7165347870383877,"cd snapcraft  && echo ""override_dh_auto_test:"" >> debian/rules  && mk-build-deps debian/control -i --tool 'apt-get -y --no-install-recommends'  && dpkg-buildpackage -us -uc"
0.7165347870383877,apk add --no-cache git     && rm -rf html/     && git clone https://github.com/CodFrm/cas.git /var/www/html     && cd html     && apk del git     && chown www .env
0.7165347870383877,git clone --depth=1 https://github.com/jvm-profiling-tools/async-profiler     && cd async-profiler && make
0.7165347870383877,git clone --depth=1 https://github.com/jvm-profiling-tools/perf-map-agent     && cd perf-map-agent && cmake . && make
0.7056121153202771,"groupadd --gid 3434 circleci   && useradd --uid 3434 --gid circleci --shell /bin/bash --create-home circleci   && echo 'circleci ALL=NOPASSWD: ALL' >> /etc/sudoers.d/50-circleci   && echo 'Defaults    env_keep += ""DEBIAN_FRONTEND""' >> /etc/sudoers.d/env_keep"
0.790576523972366,"groupadd --gid 3434 circleci   && useradd --uid 3434 --gid circleci --shell /bin/bash --create-home circleci   && echo 'circleci ALL=NOPASSWD: ALL' >> /etc/sudoers.d/50-circleci   && echo 'Defaults    env_keep += ""DEBIAN_FRONTEND""' >> /etc/sudoers.d/env_keep"
0.7545114279758257,set -xv ; apt-get -qq update && apt-get -qq dist-upgrade -y && apt-get -qq install -y ${pkgs} ${pkgs_tmp} && gem install fpm && apt-get remove -y --purge ${pkgs_tmp} && apt-get -qq autoremove -y && apt-get -qq clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /*.deb /MoarVM* /nqp* /rakudo*
0.79987114291424,wget http://www.mpich.org/static/downloads/${MPICH_VERSION}/mpich-${MPICH_VERSION}.tar.gz &&     tar xvzf mpich-${MPICH_VERSION}.tar.gz &&     cd mpich-${MPICH_VERSION}              &&     ./configure ${MPICH_CONFIGURE_OPTIONS} &&     make ${MPICH_MAKE_OPTIONS}             &&     make install                           &&     ldconfig                               &&     cd /tmp                                &&     rm -fr *
0.7165347870383877,"tar zxf petsc-lite-3.9.3.tar.gz && cd petsc-3.9.3 &&     ./configure --with-debugging=0 --prefix=/usr                                                 --COPTFLAGS=""-g -O3"" --CXXOPTFLAGS=""-g -O3"" --FOPTFLAGS=""-g -O3""                 --download-petsc4py=1                     --download-mpi4py=1                       --download-mumps=1                        --download-parmetis=1                     --download-metis=1                        --download-superlu=1                      --download-hypre=1                        --download-cmake=1                        --download-scalapack=1                    --download-superlu_dist=1                 --download-superlu=1                      --download-fblaslapack=1                  --download-hdf5=1                                                    &&     make PETSC_DIR=/tmp/petsc-build/petsc-3.9.3 PETSC_ARCH=arch-linux2-c-opt all     &&     make PETSC_DIR=/tmp/petsc-build/petsc-3.9.3 PETSC_ARCH=arch-linux2-c-opt install &&     cd /tmp &&     rm -fr *"
0.7005427514550036,"tar zxf petsc-lite-3.9.3.tar.gz && cd petsc-3.9.3 &&     ./configure --with-debugging=0 --prefix=/usr                                                 --COPTFLAGS=""-g -O3"" --CXXOPTFLAGS=""-g -O3"" --FOPTFLAGS=""-g -O3""                 --download-petsc4py=1                     --download-mpi4py=1                       --download-mumps=1                        --download-parmetis=1                     --download-metis=1                        --download-superlu=1                      --download-hypre=1                        --download-cmake=1                        --download-scalapack=1                    --download-superlu_dist=1                 --download-superlu=1                      --download-fblaslapack=1                  --download-hdf5=1                                                    &&     make PETSC_DIR=/tmp/petsc-build/petsc-3.9.3 PETSC_ARCH=arch-linux2-c-opt all     &&     make PETSC_DIR=/tmp/petsc-build/petsc-3.9.3 PETSC_ARCH=arch-linux2-c-opt install &&     cd /tmp &&     rm -fr *"
0.9762930859726711,"tar zxf petsc-lite-3.9.3.tar.gz && cd petsc-3.9.3 &&     ./configure --with-debugging=0 --prefix=/usr                                                 --COPTFLAGS=""-g -O3"" --CXXOPTFLAGS=""-g -O3"" --FOPTFLAGS=""-g -O3""                 --download-petsc4py=1                     --download-mpi4py=1                       --download-mumps=1                        --download-parmetis=1                     --download-metis=1                        --download-superlu=1                      --download-hypre=1                        --download-cmake=1                        --download-scalapack=1                    --download-superlu_dist=1                 --download-superlu=1                      --download-fblaslapack=1                  --download-hdf5=1                                                    &&     make PETSC_DIR=/tmp/petsc-build/petsc-3.9.3 PETSC_ARCH=arch-linux2-c-opt all     &&     make PETSC_DIR=/tmp/petsc-build/petsc-3.9.3 PETSC_ARCH=arch-linux2-c-opt install &&     cd /tmp &&     rm -fr *"
0.7165347870383877,wget 'https://github.com/samtools/samtools/releases/download/1.9/samtools-1.9.tar.bz2' &&   tar -xvf samtools-1.9.tar.bz2 && rm samtools-1.9.tar.bz2 && cd samtools-1.9 && make
0.7056121153202771,"groupadd --gid 3434 circleci   && useradd --uid 3434 --gid circleci --shell /bin/bash --create-home circleci   && echo 'circleci ALL=NOPASSWD: ALL' >> /etc/sudoers.d/50-circleci   && echo 'Defaults    env_keep += ""DEBIAN_FRONTEND""' >> /etc/sudoers.d/env_keep"
0.790576523972366,"groupadd --gid 3434 circleci   && useradd --uid 3434 --gid circleci --shell /bin/bash --create-home circleci   && echo 'circleci ALL=NOPASSWD: ALL' >> /etc/sudoers.d/50-circleci   && echo 'Defaults    env_keep += ""DEBIAN_FRONTEND""' >> /etc/sudoers.d/env_keep"
0.8278666554894598,"set -x 	&& export SECCOMP_PATH=""$(mktemp -d)"" 	&& curl -fsSL ""https://github.com/seccomp/libseccomp/releases/download/v${SECCOMP_VERSION}/libseccomp-${SECCOMP_VERSION}.tar.gz"" 		| tar -xzC ""$SECCOMP_PATH"" --strip-components=1 	&& ( 		cd ""$SECCOMP_PATH"" 		&& ./configure --prefix=/usr/local 		&& make 		&& make install 		&& ldconfig 	) 	&& rm -rf ""$SECCOMP_PATH"""
0.7241442229896204,"set -x 	&& export GOPATH=""$(mktemp -d)"" 	&& git clone https://github.com/docker/containerd.git ""$GOPATH/src/github.com/docker/containerd"" 	&& cd ""$GOPATH/src/github.com/docker/containerd"" 	&& git checkout -q ""$CONTAINERD_COMMIT"" 	&& make static 	&& cp bin/containerd /usr/local/bin/docker-containerd 	&& cp bin/containerd-shim /usr/local/bin/docker-containerd-shim 	&& cp bin/ctr /usr/local/bin/docker-containerd-ctr 	&& rm -rf ""$GOPATH"""
0.7442296658131209,"INSTALL_PKGS=""tar unzip bc which lsof $JAVA"" &&     yum install -y --enablerepo=centosplus $INSTALL_PKGS &&     rpm -V $INSTALL_PKGS &&     yum clean all -y &&     (curl -v https://www.apache.org/dist/maven/maven-3/$MAVEN_VERSION/binaries/apache-maven-$MAVEN_VERSION-bin.tar.gz |     tar -zx -C /usr/local) &&     ln -sf /usr/local/apache-maven-$MAVEN_VERSION/bin/mvn /usr/local/bin/mvn &&     mkdir -p $HOME/.m2 &&     mkdir -p /tomcat &&     (curl -v https://www.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz | tar -zx --strip-components=1 -C /tomcat) &&     mkdir -p /opt/s2i/destination"
0.7119203380258629,"INSTALL_PKGS=""tar unzip bc which lsof $JAVA"" &&     yum install -y --enablerepo=centosplus $INSTALL_PKGS &&     rpm -V $INSTALL_PKGS &&     yum clean all -y &&     (curl -v https://www.apache.org/dist/maven/maven-3/$MAVEN_VERSION/binaries/apache-maven-$MAVEN_VERSION-bin.tar.gz |     tar -zx -C /usr/local) &&     ln -sf /usr/local/apache-maven-$MAVEN_VERSION/bin/mvn /usr/local/bin/mvn &&     mkdir -p $HOME/.m2 &&     mkdir -p /tomcat &&     (curl -v https://www.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz | tar -zx --strip-components=1 -C /tomcat) &&     mkdir -p /opt/s2i/destination"
0.7081927866769152,"INSTALL_PKGS=""tar unzip bc which lsof $JAVA"" &&     yum install -y --enablerepo=centosplus $INSTALL_PKGS &&     rpm -V $INSTALL_PKGS &&     yum clean all -y &&     (curl -v https://www.apache.org/dist/maven/maven-3/$MAVEN_VERSION/binaries/apache-maven-$MAVEN_VERSION-bin.tar.gz |     tar -zx -C /usr/local) &&     ln -sf /usr/local/apache-maven-$MAVEN_VERSION/bin/mvn /usr/local/bin/mvn &&     mkdir -p $HOME/.m2 &&     mkdir -p /tomcat &&     (curl -v https://www.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz | tar -zx --strip-components=1 -C /tomcat) &&     mkdir -p /opt/s2i/destination"
0.790576523972366,groupadd --gid 1000 node   && useradd --uid 1000 --gid node --shell /bin/bash --create-home node
0.7260743524685964,"apt-get -y update     && apt-get -y install wget build-essential bison autoconf     && mkdir /usr/local/src/bash     && wget -qO- https://ftp.gnu.org/gnu/bash/bash-4.3.tar.gz | tar zx -C /usr/local/src/bash --strip-components=1     && cd /usr/local/src/bash     && wget -qO- $(seq -f ""https://ftp.gnu.org/gnu/bash/bash-4.3-patches/bash43-%03g"" 25) | patch -p0     && ./configure     && make     && make install     && rm -rf /usr/local/src/bash     && rm /bin/bash     && ln -s /usr/local/bin/bash /bin/bash"
0.7165347870383877,"cd / && git clone https://github.com/psi4/psi4 && cd psi4 && mkdir build && cd build     && cmake .. -DPYTHON_EXECUTABLE=$(which python3) -DCMAKE_INSTALL_PREFIX=$(python3 -m site --user-site)/psi4     && make -j8 install     && echo ""./psi4"" >> /root/.local/lib/python3.6/site-packages/psi4.pth     && echo ""export PATH=$PATH:$(python3 -m site --user-site)/psi4/bin"" >> ~/.bashrc"
0.7165347870383877,"cd / && git clone https://github.com/psi4/psi4 && cd psi4 && mkdir build && cd build     && cmake .. -DPYTHON_EXECUTABLE=$(which python3) -DCMAKE_INSTALL_PREFIX=$(python3 -m site --user-site)/psi4     && make -j8 install     && echo ""./psi4"" >> /root/.local/lib/python3.6/site-packages/psi4.pth     && echo ""export PATH=$PATH:$(python3 -m site --user-site)/psi4/bin"" >> ~/.bashrc"
0.7352832849476106,"cd / && git clone https://github.com/psi4/psi4 && cd psi4 && mkdir build && cd build     && cmake .. -DPYTHON_EXECUTABLE=$(which python3) -DCMAKE_INSTALL_PREFIX=$(python3 -m site --user-site)/psi4     && make -j8 install     && echo ""./psi4"" >> /root/.local/lib/python3.6/site-packages/psi4.pth     && echo ""export PATH=$PATH:$(python3 -m site --user-site)/psi4/bin"" >> ~/.bashrc"
0.7165347870383877,"rm /bin/sh && ln -s /bin/bash /bin/sh && apt-get -y update && apt-get -y install vim gfortran libblas-dev liblapack-dev pkg-config libhdf5-dev     && python3 -m pip install --upgrade pip xacc && python3 -m pip install jupyterlab pyquil mpmath deepdiff        numpy scipy openfermion xacc-rigetti xacc-vqe tnqvm xacc-ibm --no-cache-dir && ipython3 kernel install     && python3 -m pip uninstall -y h5py && python3 -m pip install h5py==2.8.0rc1     && git clone https://github.com/amccaskey/OpenFermion-Psi4 && cd OpenFermion-Psi4 && python3 -m pip install --user .     && cd / && git clone --recursive https://github.com/ornl-qci/xacc-vqe-bayesopt     && cd xacc-vqe-bayesopt && mkdir build && cd build && cmake .. -DXACC_DIR=$(python3 -m pyxacc -L)     && apt-get install -y apt-transport-https ca-certificates curl software-properties-common     && curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -     && add-apt-repository ""deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic test""     && apt-get update -y && apt-get install -y docker-ce     && sed -i 's/os.rename/shutil.move/g' /usr/local/lib/python3.6/dist-packages/openfermion/hamiltonians/_molecular_data.py     && sed -i 's/import os/import os, shutil/g' /usr/local/lib/python3.6/dist-packages/openfermion/hamiltonians/_molecular_data.py"
0.7165347870383877,"rm /bin/sh && ln -s /bin/bash /bin/sh && apt-get -y update && apt-get -y install vim gfortran libblas-dev liblapack-dev pkg-config libhdf5-dev     && python3 -m pip install --upgrade pip xacc && python3 -m pip install jupyterlab pyquil mpmath deepdiff        numpy scipy openfermion xacc-rigetti xacc-vqe tnqvm xacc-ibm --no-cache-dir && ipython3 kernel install     && python3 -m pip uninstall -y h5py && python3 -m pip install h5py==2.8.0rc1     && git clone https://github.com/amccaskey/OpenFermion-Psi4 && cd OpenFermion-Psi4 && python3 -m pip install --user .     && cd / && git clone --recursive https://github.com/ornl-qci/xacc-vqe-bayesopt     && cd xacc-vqe-bayesopt && mkdir build && cd build && cmake .. -DXACC_DIR=$(python3 -m pyxacc -L)     && apt-get install -y apt-transport-https ca-certificates curl software-properties-common     && curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -     && add-apt-repository ""deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic test""     && apt-get update -y && apt-get install -y docker-ce     && sed -i 's/os.rename/shutil.move/g' /usr/local/lib/python3.6/dist-packages/openfermion/hamiltonians/_molecular_data.py     && sed -i 's/import os/import os, shutil/g' /usr/local/lib/python3.6/dist-packages/openfermion/hamiltonians/_molecular_data.py"
0.7165347870383877,"rm /bin/sh && ln -s /bin/bash /bin/sh && apt-get -y update && apt-get -y install vim gfortran libblas-dev liblapack-dev pkg-config libhdf5-dev     && python3 -m pip install --upgrade pip xacc && python3 -m pip install jupyterlab pyquil mpmath deepdiff        numpy scipy openfermion xacc-rigetti xacc-vqe tnqvm xacc-ibm --no-cache-dir && ipython3 kernel install     && python3 -m pip uninstall -y h5py && python3 -m pip install h5py==2.8.0rc1     && git clone https://github.com/amccaskey/OpenFermion-Psi4 && cd OpenFermion-Psi4 && python3 -m pip install --user .     && cd / && git clone --recursive https://github.com/ornl-qci/xacc-vqe-bayesopt     && cd xacc-vqe-bayesopt && mkdir build && cd build && cmake .. -DXACC_DIR=$(python3 -m pyxacc -L)     && apt-get install -y apt-transport-https ca-certificates curl software-properties-common     && curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -     && add-apt-repository ""deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic test""     && apt-get update -y && apt-get install -y docker-ce     && sed -i 's/os.rename/shutil.move/g' /usr/local/lib/python3.6/dist-packages/openfermion/hamiltonians/_molecular_data.py     && sed -i 's/import os/import os, shutil/g' /usr/local/lib/python3.6/dist-packages/openfermion/hamiltonians/_molecular_data.py"
0.7103785949099959,"cd ~/ &&     git clone https://github.com/Itseez/opencv.git --branch ${OPENCV_VERSION} --single-branch &&     git clone https://github.com/Itseez/opencv_contrib.git --branch ${OPENCV_VERSION} --single-branch &&     cd opencv &&     mkdir build &&     cd build &&     cmake -D CMAKE_BUILD_TYPE=RELEASE         -DWITH_QT=ON         -DWITH_OPENGL=ON         -D WITH_CUDA=ON         -D CUDA_CUDA_LIBRARY=/usr/local/cuda/lib64/stubs/libcuda.so         -D ENABLE_FAST_MATH=1         -D CUDA_FAST_MATH=1         -D WITH_CUBLAS=1         -DFORCE_VTK=ON         -DWITH_TBB=ON         -DWITH_GDAL=ON         -DWITH_XINE=ON         -DBUILD_EXAMPLES=ON         -D OPENCV_EXTRA_MODULES_PATH=~/opencv_contrib/modules         .. &&     make -j""$(nproc)"" &&     make install &&     ldconfig &&     rm -rf ~/opencv*"
0.7165347870383877,"cd ~/ &&     git clone https://github.com/Itseez/opencv.git --branch ${OPENCV_VERSION} --single-branch &&     git clone https://github.com/Itseez/opencv_contrib.git --branch ${OPENCV_VERSION} --single-branch &&     cd opencv &&     mkdir build &&     cd build &&     cmake -D CMAKE_BUILD_TYPE=RELEASE         -DWITH_QT=ON         -DWITH_OPENGL=ON         -D WITH_CUDA=ON         -D CUDA_CUDA_LIBRARY=/usr/local/cuda/lib64/stubs/libcuda.so         -D ENABLE_FAST_MATH=1         -D CUDA_FAST_MATH=1         -D WITH_CUBLAS=1         -DFORCE_VTK=ON         -DWITH_TBB=ON         -DWITH_GDAL=ON         -DWITH_XINE=ON         -DBUILD_EXAMPLES=ON         -D OPENCV_EXTRA_MODULES_PATH=~/opencv_contrib/modules         .. &&     make -j""$(nproc)"" &&     make install &&     ldconfig &&     rm -rf ~/opencv*"
