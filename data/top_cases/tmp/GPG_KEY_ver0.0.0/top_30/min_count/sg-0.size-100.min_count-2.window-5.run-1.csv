result,description
0.8559282884450413,ln -s /root/.composer/vendor/bin/* /usr/local/bin/ > /dev/null 2>&1
0.8303885594245262,composer global require         phpunit/phpunit         squizlabs/php_codesniffer         friendsofphp/php-cs-fixer         phpmd/phpmd         behat/behat         phploc/phploc         phpstan/phpstan         icanhazstring/composer-unused > /dev/null 2>&1
0.811251451537351,apt-get update > /dev/null 2>&1 &&     apt-get -y install         curl         git         zip         unzip         zlib1g-dev         libzip-dev > /dev/null 2>&1 &&     apt-get clean &&     docker-php-ext-install zip &&     rm -rf /var/lib/apt/lists/* > /dev/null 2>&1
0.8171348258366569,curl --silent https://getcomposer.org/installer | php > /dev/null 2>&1 &&     mv ./composer.phar /usr/local/bin/composer > /dev/null 2>&1
0.8366911417562186,./configure --libdir=/usr/lib64 1> /dev/null
0.8320630147680804,make samples 1> /dev/null
0.8320630147680804,make install 1> /dev/null
0.8259421223548971,make 1> /dev/null
0.8234987393782529,echo 'bundle config --global jobs $(cat /proc/cpuinfo | grep -c processor)' >> $CONTAINER_INIT
0.8234987393782529,echo 'service postgresql start' >> $CONTAINER_INIT
0.819007966036187,echo '#!/usr/bin/env bash' > $CONTAINER_INIT ; chmod +x $CONTAINER_INIT
0.8234987393782529,echo 'Xvfb :0 -ac -screen 0 1024x768x24 >/dev/null 2>&1 &' >> $CONTAINER_INIT
0.8294901937490241,"/bin/echo -e ""tail -f /dev/null"" >> ${HOME}/.vnc/xstartup"
0.8294901937490241,"/bin/echo -e ""fi"" >> ${HOME}/.vnc/xstartup"
0.8294901937490241,"/bin/echo -e ""    mv ${HOME}/.vnc/xstartup_after ${HOME}/.vnc/xstartup"" >> ${HOME}/.vnc/xstartup"
0.8294901937490241,"/bin/echo -e ""    tar -zxf /tmp/installers/Thunder\ Network.tar.gz --directory=\""${HOME}/.cxoffice/${BOTTLE}/drive_c/Program Files/\"""" >> ${HOME}/.vnc/xstartup"
0.8294901937490241,"/bin/echo -e ""    cp /tmp/installers/dll/* \""${HOME}/.cxoffice/${BOTTLE}/drive_c/windows/system32/\"""" >> ${HOME}/.vnc/xstartup"
0.8294901937490241,"/bin/echo -e ""    [[ -d /mnt/drive_d ]] && ln -snf /mnt/drive_d \""${HOME}/.cxoffice/${BOTTLE}/dosdevices/d:\""""  >> ${HOME}/.vnc/xstartup"
0.8294901937490241,"/bin/echo -e ""    sed -i -e 's/;;\""AllowUntrusted\"" = \""\""/\""AllowUntrusted\"" = \""1\""/' ${HOME}/.cxoffice/${BOTTLE}/cxbottle.conf"" >> ${HOME}/.vnc/xstartup"
0.8294901937490241,"/bin/echo -e ""    ${INSTALLDIR}/bin/cxbottle --create --bottle \""${BOTTLE}\"" --description \""迅雷容器\"" --template \""winxp\"""" >> ${HOME}/.vnc/xstartup"
0.8294901937490241,"/bin/echo -e ""if [[ ! -f \""${HOME}/.cxoffice/${BOTTLE}/cxbottle.conf\"" ]]; then"" >> ${HOME}/.vnc/xstartup"
0.8294901937490241,"/bin/echo -e ""[ -r ${HOME}/.Xresources ] && xrdb ${HOME}/.Xresources\nxsetroot -solid grey""  >> ${HOME}/.vnc/xstartup"
0.8294901937490241,"/bin/echo -e ""export DISPLAY=${DISPLAY}""  >> ${HOME}/.vnc/xstartup"
0.8339085389814028,for i in $(seq 500 1100); do echo snapper:x:$i:100:a build user:/build:/bin/bash ; done | tee -a /etc/passwd
0.8063676716023004,"cd snapcraft  && echo ""override_dh_auto_test:"" >> debian/rules  && mk-build-deps debian/control -i --tool 'apt-get -y --no-install-recommends'  && dpkg-buildpackage -us -uc"
0.8067812650906145,{ 		echo 'opcache.memory_consumption=128'; 		echo 'opcache.interned_strings_buffer=8'; 		echo 'opcache.max_accelerated_files=4000'; 		echo 'opcache.revalidate_freq=2'; 		echo 'opcache.fast_shutdown=1'; 		echo 'opcache.enable_cli=1'; 	} > /usr/local/etc/php/conf.d/opcache-recommended.ini
0.8696402667554326,curl ${COREOS_RELEASE_URL}/coreos_developer_container.bin.bz2 |         bzip2 -d > /tmp/coreos_developer_container.bin
0.8317883277238882,"apk --no-cache add curl     && API_VERSION=$(curl -sI https://github.com/triggermesh/aws-custom-runtime/releases/latest | grep ""Location:"" | awk -F ""/"" '{print $NF}' | tr -d ""\r"")     && RUNTIME_VERSION=$(curl -sI https://github.com/triggermesh/knative-lambda-runtime/releases/latest | grep ""Location:"" | awk -F ""/"" '{print $NF}' | tr -d ""\r"")     && curl -sL https://github.com/triggermesh/aws-custom-runtime/releases/download/${API_VERSION}/aws-custom-runtime > aws-custom-runtime     && chmod +x aws-custom-runtime     && curl -sL https://github.com/triggermesh/knative-lambda-runtime/archive/${RUNTIME_VERSION}.tar.gz | tar -xz knative-lambda-runtime-${RUNTIME_VERSION}/python-2.7     && mv knative-lambda-runtime-${RUNTIME_VERSION}/python-2.7/* ."
0.8421215437105066,"echo ""host all all 0.0.0.0/0 md5"" >> /etc/postgresql/10/main/pg_hba.conf"
0.8421215437105066,"echo ""listen_addresses = '*'"" >> /etc/postgresql/10/main/postgresql.conf"
