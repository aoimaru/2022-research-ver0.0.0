result,description
0.8533100438294379,ln -s /root/.composer/vendor/bin/* /usr/local/bin/ > /dev/null 2>&1
0.8207308461420878,composer global require         phpunit/phpunit         squizlabs/php_codesniffer         friendsofphp/php-cs-fixer         phpmd/phpmd         behat/behat         phploc/phploc         phpstan/phpstan         icanhazstring/composer-unused > /dev/null 2>&1
0.8255338916238413,./configure --libdir=/usr/lib64 1> /dev/null
0.8273672122435286,make samples 1> /dev/null
0.8273672122435286,make install 1> /dev/null
0.8160711990769485,make 1> /dev/null
0.8242511031886197,echo 'bundle config --global jobs $(cat /proc/cpuinfo | grep -c processor)' >> $CONTAINER_INIT
0.8242511031886197,echo 'service postgresql start' >> $CONTAINER_INIT
0.8236928363683296,echo '#!/usr/bin/env bash' > $CONTAINER_INIT ; chmod +x $CONTAINER_INIT
0.8242511031886197,echo 'Xvfb :0 -ac -screen 0 1024x768x24 >/dev/null 2>&1 &' >> $CONTAINER_INIT
0.8287300088950106,"/bin/echo -e ""tail -f /dev/null"" >> ${HOME}/.vnc/xstartup"
0.8287300088950106,"/bin/echo -e ""fi"" >> ${HOME}/.vnc/xstartup"
0.8287300088950106,"/bin/echo -e ""    mv ${HOME}/.vnc/xstartup_after ${HOME}/.vnc/xstartup"" >> ${HOME}/.vnc/xstartup"
0.8287300088950106,"/bin/echo -e ""    tar -zxf /tmp/installers/Thunder\ Network.tar.gz --directory=\""${HOME}/.cxoffice/${BOTTLE}/drive_c/Program Files/\"""" >> ${HOME}/.vnc/xstartup"
0.8287300088950106,"/bin/echo -e ""    cp /tmp/installers/dll/* \""${HOME}/.cxoffice/${BOTTLE}/drive_c/windows/system32/\"""" >> ${HOME}/.vnc/xstartup"
0.8287300088950106,"/bin/echo -e ""    [[ -d /mnt/drive_d ]] && ln -snf /mnt/drive_d \""${HOME}/.cxoffice/${BOTTLE}/dosdevices/d:\""""  >> ${HOME}/.vnc/xstartup"
0.8287300088950106,"/bin/echo -e ""    sed -i -e 's/;;\""AllowUntrusted\"" = \""\""/\""AllowUntrusted\"" = \""1\""/' ${HOME}/.cxoffice/${BOTTLE}/cxbottle.conf"" >> ${HOME}/.vnc/xstartup"
0.8287300088950106,"/bin/echo -e ""    ${INSTALLDIR}/bin/cxbottle --create --bottle \""${BOTTLE}\"" --description \""迅雷容器\"" --template \""winxp\"""" >> ${HOME}/.vnc/xstartup"
0.8287300088950106,"/bin/echo -e ""if [[ ! -f \""${HOME}/.cxoffice/${BOTTLE}/cxbottle.conf\"" ]]; then"" >> ${HOME}/.vnc/xstartup"
0.8287300088950106,"/bin/echo -e ""[ -r ${HOME}/.Xresources ] && xrdb ${HOME}/.Xresources\nxsetroot -solid grey""  >> ${HOME}/.vnc/xstartup"
0.8287300088950106,"/bin/echo -e ""export DISPLAY=${DISPLAY}""  >> ${HOME}/.vnc/xstartup"
0.8366419852757799,for i in $(seq 500 1100); do echo snapper:x:$i:100:a build user:/build:/bin/bash ; done | tee -a /etc/passwd
0.8048891695955647,"cd snapcraft  && echo ""override_dh_auto_test:"" >> debian/rules  && mk-build-deps debian/control -i --tool 'apt-get -y --no-install-recommends'  && dpkg-buildpackage -us -uc"
0.8113193470748713,{ 		echo 'opcache.memory_consumption=128'; 		echo 'opcache.interned_strings_buffer=8'; 		echo 'opcache.max_accelerated_files=4000'; 		echo 'opcache.revalidate_freq=2'; 		echo 'opcache.fast_shutdown=1'; 		echo 'opcache.enable_cli=1'; 	} > /usr/local/etc/php/conf.d/opcache-recommended.ini
0.8712694904956212,curl ${COREOS_RELEASE_URL}/coreos_developer_container.bin.bz2 |         bzip2 -d > /tmp/coreos_developer_container.bin
0.8348177762155623,"apk --no-cache add curl     && API_VERSION=$(curl -sI https://github.com/triggermesh/aws-custom-runtime/releases/latest | grep ""Location:"" | awk -F ""/"" '{print $NF}' | tr -d ""\r"")     && RUNTIME_VERSION=$(curl -sI https://github.com/triggermesh/knative-lambda-runtime/releases/latest | grep ""Location:"" | awk -F ""/"" '{print $NF}' | tr -d ""\r"")     && curl -sL https://github.com/triggermesh/aws-custom-runtime/releases/download/${API_VERSION}/aws-custom-runtime > aws-custom-runtime     && chmod +x aws-custom-runtime     && curl -sL https://github.com/triggermesh/knative-lambda-runtime/archive/${RUNTIME_VERSION}.tar.gz | tar -xz knative-lambda-runtime-${RUNTIME_VERSION}/python-2.7     && mv knative-lambda-runtime-${RUNTIME_VERSION}/python-2.7/* ."
0.8425333440837013,"echo ""host all all 0.0.0.0/0 md5"" >> /etc/postgresql/10/main/pg_hba.conf"
0.8425333440837013,"echo ""listen_addresses = '*'"" >> /etc/postgresql/10/main/postgresql.conf"
0.8493022305736261,"echo ""Pacific/Auckland"" > /etc/timezone"
0.8425333440837013,"echo ""host all all ::/0 md5"" >> /etc/postgresql/10/main/pg_hba.conf"
0.8425333440837013,"echo ""daemon off;"" >> /etc/nginx/nginx.conf"
0.8485199989064279,"echo ""upstream php-upstream { server php:9000; }"" > /etc/nginx/conf.d/upstream.conf"
0.8406707246134493,"set -ex   && export DOCKER_VERSION=$(curl --silent --fail --retry 3 https://download.docker.com/linux/static/stable/x86_64/ | grep -o -e 'docker-[.0-9]*-ce\.tgz' | sort -r | head -n 1)   && DOCKER_URL=""https://download.docker.com/linux/static/stable/x86_64/${DOCKER_VERSION}""   && echo Docker URL: $DOCKER_URL   && curl --silent --show-error --location --fail --retry 3 --output /tmp/docker.tgz ""${DOCKER_URL}""   && ls -lha /tmp/docker.tgz   && tar -xz -C /tmp -f /tmp/docker.tgz   && mv /tmp/docker/* /usr/bin   && rm -rf /tmp/docker /tmp/docker.tgz   && which docker   && (docker version || true)"
0.821606469483799,"echo 'APT::Get::Assume-Yes ""true"";' > /etc/apt/apt.conf.d/90circleci   && echo 'DPkg::Options ""--force-confnew"";' >> /etc/apt/apt.conf.d/90circleci"
0.8485199989064279,"echo ""scion ALL=(ALL) NOPASSWD:ALL"" > /etc/sudoers.d/scion"
0.8090903412476665,"ipcluster nbextension enable &&     ipython profile create --parallel --profile=mpi &&     echo ""c.IPClusterEngines.engine_launcher_class = 'MPIEngineSetLauncher'"" >> /root/.ipython/profile_mpi/ipcluster_config.py"
0.8406707246134493,"set -ex   && export DOCKER_VERSION=$(curl --silent --fail --retry 3 https://download.docker.com/linux/static/stable/x86_64/ | grep -o -e 'docker-[.0-9]*-ce\.tgz' | sort -r | head -n 1)   && DOCKER_URL=""https://download.docker.com/linux/static/stable/x86_64/${DOCKER_VERSION}""   && echo Docker URL: $DOCKER_URL   && curl --silent --show-error --location --fail --retry 3 --output /tmp/docker.tgz ""${DOCKER_URL}""   && ls -lha /tmp/docker.tgz   && tar -xz -C /tmp -f /tmp/docker.tgz   && mv /tmp/docker/* /usr/bin   && rm -rf /tmp/docker /tmp/docker.tgz   && which docker   && (docker version || true)"
0.821606469483799,"echo 'APT::Get::Assume-Yes ""true"";' > /etc/apt/apt.conf.d/90circleci   && echo 'DPkg::Options ""--force-confnew"";' >> /etc/apt/apt.conf.d/90circleci"
0.8425333440837013,echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers
0.8656425835975621,"ARCH= && dpkgArch=""$(dpkg --print-architecture)""   && case ""${dpkgArch##*-}"" in     amd64) ARCH='x64';;     ppc64el) ARCH='ppc64le';;     s390x) ARCH='s390x';;     arm64) ARCH='arm64';;     armhf) ARCH='armv7l';;     i386) ARCH='x86';;     *) echo ""unsupported architecture""; exit 1 ;;   esac   && set -ex   && for key in     94AE36675C464D64BAFA68DD7434390BDBE9B9C5     FD3A5288F042B6850C66B31F09FE44734EB7990E     71DCFD284A79C3B38668286BC97EC7A07EDE3FC1     DD8F2338BAE7501E3DD5AC78C273792F7D83545D     C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8     B9AE9905FFD7803F25714661B63B535A4C206CA9     77984A986EBC2AA786BC0F66B01FBB92821C587A     8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600     4ED778F539E3634C779C87C6D7062848A1AB005C     A48C2BEE680E841632CD4E44F07496B3EB3C1762     B9E2F5981AA6E0CD28160D9FF13993A75599653C   ; do     gpg --batch --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys ""$key"" ||     gpg --batch --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys ""$key"" ||     gpg --batch --keyserver hkp://pgp.mit.edu:80 --recv-keys ""$key"" ;   done   && curl -fsSLO --compressed ""https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-$ARCH.tar.xz""   && curl -fsSLO --compressed ""https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc""   && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc   && grep "" node-v$NODE_VERSION-linux-$ARCH.tar.xz\$"" SHASUMS256.txt | sha256sum -c -   && tar -xJf ""node-v$NODE_VERSION-linux-$ARCH.tar.xz"" -C /usr/local --strip-components=1 --no-same-owner   && rm ""node-v$NODE_VERSION-linux-$ARCH.tar.xz"" SHASUMS256.txt.asc SHASUMS256.txt   && ln -s /usr/local/bin/node /usr/local/bin/nodejs"
