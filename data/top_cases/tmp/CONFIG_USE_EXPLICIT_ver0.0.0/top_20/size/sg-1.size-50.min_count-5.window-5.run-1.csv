result,description
0.7580635737649823,"echo ""deb http://ppa.launchpad.net/ansible/ansible/ubuntu xenial main"" | tee /etc/apt/sources.list.d/ansible.list           &&     echo ""deb-src http://ppa.launchpad.net/ansible/ansible/ubuntu xenial main"" | tee -a /etc/apt/sources.list.d/ansible.list    &&     apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 7BB9C367    &&     DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends         ansible         fonts-lato         javascript-common         libjs-jquery         libruby         rake         ruby         ruby-minitest         ruby-test-unit         rubygems-integration         unzip         zip &&     rm -rf /var/lib/apt/lists/*  /etc/apt/sources.list.d/ansible.list &&     gem install bundler &&     gem cleanup all"
0.7789410496458176,"groupadd --gid 3434 circleci   && useradd --uid 3434 --gid circleci --shell /bin/bash --create-home circleci   && echo 'circleci ALL=NOPASSWD: ALL' >> /etc/sudoers.d/50-circleci   && echo 'Defaults    env_keep += ""DEBIAN_FRONTEND""' >> /etc/sudoers.d/env_keep"
0.7580635737649823,set -xv ; apt-get -qq update && apt-get -qq dist-upgrade -y && apt-get -qq install -y ${pkgs} ${pkgs_tmp} && gem install fpm && apt-get remove -y --purge ${pkgs_tmp} && apt-get -qq autoremove -y && apt-get -qq clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /*.deb /MoarVM* /nqp* /rakudo*
0.8187690276539984,wget http://www.mpich.org/static/downloads/${MPICH_VERSION}/mpich-${MPICH_VERSION}.tar.gz &&     tar xvzf mpich-${MPICH_VERSION}.tar.gz &&     cd mpich-${MPICH_VERSION}              &&     ./configure ${MPICH_CONFIGURE_OPTIONS} &&     make ${MPICH_MAKE_OPTIONS}             &&     make install                           &&     ldconfig                               &&     cd /tmp                                &&     rm -fr *
0.9766376257287925,"tar zxf petsc-lite-3.9.3.tar.gz && cd petsc-3.9.3 &&     ./configure --with-debugging=0 --prefix=/usr                                                 --COPTFLAGS=""-g -O3"" --CXXOPTFLAGS=""-g -O3"" --FOPTFLAGS=""-g -O3""                 --download-petsc4py=1                     --download-mpi4py=1                       --download-mumps=1                        --download-parmetis=1                     --download-metis=1                        --download-superlu=1                      --download-hypre=1                        --download-cmake=1                        --download-scalapack=1                    --download-superlu_dist=1                 --download-superlu=1                      --download-fblaslapack=1                  --download-hdf5=1                                                    &&     make PETSC_DIR=/tmp/petsc-build/petsc-3.9.3 PETSC_ARCH=arch-linux2-c-opt all     &&     make PETSC_DIR=/tmp/petsc-build/petsc-3.9.3 PETSC_ARCH=arch-linux2-c-opt install &&     cd /tmp &&     rm -fr *"
0.7789410496458176,"groupadd --gid 3434 circleci   && useradd --uid 3434 --gid circleci --shell /bin/bash --create-home circleci   && echo 'circleci ALL=NOPASSWD: ALL' >> /etc/sudoers.d/50-circleci   && echo 'Defaults    env_keep += ""DEBIAN_FRONTEND""' >> /etc/sudoers.d/env_keep"
0.8222936650485869,"set -x 	&& export SECCOMP_PATH=""$(mktemp -d)"" 	&& curl -fsSL ""https://github.com/seccomp/libseccomp/releases/download/v${SECCOMP_VERSION}/libseccomp-${SECCOMP_VERSION}.tar.gz"" 		| tar -xzC ""$SECCOMP_PATH"" --strip-components=1 	&& ( 		cd ""$SECCOMP_PATH"" 		&& ./configure --prefix=/usr/local 		&& make 		&& make install 		&& ldconfig 	) 	&& rm -rf ""$SECCOMP_PATH"""
0.7671918508798031,"set -x 	&& export GOPATH=""$(mktemp -d)"" 	&& git clone https://github.com/docker/containerd.git ""$GOPATH/src/github.com/docker/containerd"" 	&& cd ""$GOPATH/src/github.com/docker/containerd"" 	&& git checkout -q ""$CONTAINERD_COMMIT"" 	&& make static 	&& cp bin/containerd /usr/local/bin/docker-containerd 	&& cp bin/containerd-shim /usr/local/bin/docker-containerd-shim 	&& cp bin/ctr /usr/local/bin/docker-containerd-ctr 	&& rm -rf ""$GOPATH"""
0.7789410496458176,groupadd --gid 1000 node   && useradd --uid 1000 --gid node --shell /bin/bash --create-home node
0.7591720140544399,"apt-get -y update     && apt-get -y install wget build-essential bison autoconf     && mkdir /usr/local/src/bash     && wget -qO- https://ftp.gnu.org/gnu/bash/bash-4.3.tar.gz | tar zx -C /usr/local/src/bash --strip-components=1     && cd /usr/local/src/bash     && wget -qO- $(seq -f ""https://ftp.gnu.org/gnu/bash/bash-4.3-patches/bash43-%03g"" 25) | patch -p0     && ./configure     && make     && make install     && rm -rf /usr/local/src/bash     && rm /bin/bash     && ln -s /usr/local/bin/bash /bin/bash"
0.7707343724528797,"cd / && git clone https://github.com/psi4/psi4 && cd psi4 && mkdir build && cd build     && cmake .. -DPYTHON_EXECUTABLE=$(which python3) -DCMAKE_INSTALL_PREFIX=$(python3 -m site --user-site)/psi4     && make -j8 install     && echo ""./psi4"" >> /root/.local/lib/python3.6/site-packages/psi4.pth     && echo ""export PATH=$PATH:$(python3 -m site --user-site)/psi4/bin"" >> ~/.bashrc"
0.75028246285053,"cd ~/ &&     git clone https://github.com/Itseez/opencv.git --branch ${OPENCV_VERSION} --single-branch &&     git clone https://github.com/Itseez/opencv_contrib.git --branch ${OPENCV_VERSION} --single-branch &&     cd opencv &&     mkdir build &&     cd build &&     cmake -D CMAKE_BUILD_TYPE=RELEASE         -DWITH_QT=ON         -DWITH_OPENGL=ON         -D WITH_CUDA=ON         -D CUDA_CUDA_LIBRARY=/usr/local/cuda/lib64/stubs/libcuda.so         -D ENABLE_FAST_MATH=1         -D CUDA_FAST_MATH=1         -D WITH_CUBLAS=1         -DFORCE_VTK=ON         -DWITH_TBB=ON         -DWITH_GDAL=ON         -DWITH_XINE=ON         -DBUILD_EXAMPLES=ON         -D OPENCV_EXTRA_MODULES_PATH=~/opencv_contrib/modules         .. &&     make -j""$(nproc)"" &&     make install &&     ldconfig &&     rm -rf ~/opencv*"
0.7789410496458176,groupadd --gid 1000 node   && useradd --uid 1000 --gid node --shell /bin/bash --create-home node
0.7694152069363104,adduser --disabled-password --gecos '' --uid 1001 --shell /bin/bash --ingroup adm helixbot &&     chmod -R +x /root &&     echo 'helixbot ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers &&     python -m virtualenv --no-site-packages /home/helixbot/.vsts-env &&     /home/helixbot/.vsts-env/bin/python -m pip install vsts==0.1.20 future==0.17.1
0.7581735476114277,"echo ""Building OpenSSL""     && OPENSSL_VERS=1.0.2p     && CHECKSUM=50a98e07b1a89eb8f6a99477f262df71c6fa7bef77df4dc83025a2845c827d00     && mkdir -p $LIBS_DIR     && cd $LIBS_DIR     && curl -sqO https://www.openssl.org/source/openssl-$OPENSSL_VERS.tar.gz     && echo ""$CHECKSUM openssl-$OPENSSL_VERS.tar.gz"" > checksums.txt     && sha256sum -c checksums.txt     && tar xzf openssl-$OPENSSL_VERS.tar.gz && cd openssl-$OPENSSL_VERS     && ./Configure $OPENSSL_ARCH -fPIC --prefix=$PREFIX_DIR     && make depend     && make && make install     && cd .. && rm -rf openssl-$OPENSSL_VERS.tar.gz openssl-$OPENSSL_VERS checksums.txt"
0.9674736025875905,"echo ""Building zlib""     && ZLIB_VERS=1.2.11     && CHECKSUM=c3e5e9fdd5004dcb542feda5ee4f0ff0744628baf8ed2dd5d66f8ca1197cb1a1     && mkdir -p $LIBS_DIR     && cd $LIBS_DIR     && curl -sqLO https://zlib.net/zlib-$ZLIB_VERS.tar.gz     && echo ""$CHECKSUM zlib-$ZLIB_VERS.tar.gz"" > checksums.txt     && sha256sum -c checksums.txt     && tar xzf zlib-$ZLIB_VERS.tar.gz && cd zlib-$ZLIB_VERS     && ./configure --static --archs=""-fPIC"" --prefix=$PREFIX_DIR     && make && make install     && cd .. && rm -rf zlib-$ZLIB_VERS.tar.gz zlib-$ZLIB_VERS checksums.txt"
0.9107469668591756,"cd ~/source/namecoin-core-nc0.16.3   && ./autogen.sh   && ./configure LDFLAGS=""-L/usr/local/db4/lib"" CPPFLAGS=""-I/usr/local/db4/include"" --without-miniupnpc   && make -j2 && make install"
0.7789410496458176,set -e -x ;        groupadd -g 1337 pwnwars ;        useradd -g 1337 -u 1337 -m pwnwars
0.7652553712643778,apk --no-cache add ffmpeg git && npm install -g grunt-cli bower && adduser -D app && mkdir /tmp/torrent-stream && chown app:app /tmp/torrent-stream
0.7580635737649823,yum-config-manager --enable ol7_optional_latest &&     yum clean all &&     yum install -y ruby ruby-devel gcc make &&     gem install json_pure &&     gem update --system &&     gem install compass &&     yum clean all
